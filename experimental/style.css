/* When in page builder we want to center the content area on the page and must reduce it by 50px to make it visible because of the sidebar */
#en__pagebuilder {
	width: calc(100% - 51px);
}

/* Adjust the editable space in the Page Editor so that the content can occupy as much space as possible */
#en__pagebuilder .en__container {
	margin-left: 1px !important;
	margin-right: 1px !important;
	border: none !important;
}

/* Page builder adds a hidden div to the bottom of the layout, this can result in undesired spacing */
#en__pagebuilder .en__component--row:nth-last-child(2){
    padding-bottom: 0px;
}

/* Reset input widths */
.en__field__label,
.en__field__input--calendar,
.en__field__input--email,
.en__field__input--number,
.en__field__input--password,
.en__field__input--telephone,
.en__field__input--text,
.en__field__input--textarea,
.en__field__input--select,
.en__field__input--other,
.en__field__input--splittext,
.en__field__input--tripletext {
	width: auto !important;
}

/* Reset height */
.en__field__input--textarea {
	height: initial !important;
}

/* Reset minimum and default width */
.en__component--column {
    min-width: auto !important;
    width: auto !important;
}

/* Force CSS Grid all the way down, normally EN defaults them to "Block" on lower resolutions. Will be ised as fallback when Grid fails. */
.en__component--advrow {
	display: -ms-grid !important;
    display: grid !important;
	-ms-grid-rows: repeat(auto-fit, minmax(0px, 1fr));
    grid-template-rows: repeat(auto-fit, minmax(0px, 1fr));
	-ms-grid-columns: repeat(auto-fit, minmax(0px, 1fr));
    grid-template-columns: repeat(auto-fit, minmax(0px, 1fr));
}

.en__component--row--1,
.en__component--row--2{
    display: -webkit-box !important; /* Fallback */
	display: -ms-flexbox !important; /* Fallback */
	display: flex !important; /* Fallback */
}

/* Fix for flexbox sub-pixel rounding causing a 1px jitter in Chrome. */
/* And because EN inserts a div at the end of rows in the page builder, we needed to use a more permiscuse scope. */
/* This fix has NOT been tested for regressions in other browsers */
/* e.g https://d.pr/i/CRYKHa */
body:not(#en__pagebuilder) .en__component--column:last-of-type,
#en__pagebuilder .en__component--column{
    position: relative;
    right: -.15px;
}

/*
.en__component--row--1 .en__component--column,
.en__component--row--2 .en__component--column{
    -ms-grid-row: 1;
    grid-row: 1;   
}

.en__component--row--2 .en__component--column--1 {
    -ms-grid-column: 1;
    -ms-grid-column-span: 1;
    grid-column: 1 / span 1;
    border: 5px solid red;
}

.en__component--row--2 .en__component--column--2 {
    -ms-grid-column: 2;
    -ms-grid-column-span: 1;
    grid-column: 2 / span 1;
    border: 5px solid BLUE;
}*/

/** Utility Class: Hides Content or Columns, but not when being viewed in Page Builder **/
body:not(#en__pagebuilder) .hide{
    display: none !important;
}

body:not(#en__pagebuilder) .hide{
    display: none !important;
}

#en__pagebuilder .hide{
    background-color: #ff00001a !important;
}

#en__pagebuilder .hide.en__component--column{
    outline-color: #ff0000 !important;
}

/*
 * ##########################################################
 * # INTERNET EXPLORER 11 SUPPORT
 * #
 * # IE 11 does not have full support for CSS grids, but the main content area which is built with Engaging Network's Advanced Columns will work
 * # However to make this possible, subsequent Advanced Columns sections will display as auto width content areas on IE 11 and not full width
 * # On all other modern browsers they will display as full width in the content, filling the available space, similar to Flexbox
 * # To best support IE 11 only use a single Advanced Column component on your page for the layout. All other rows should be the one or two column rows component
 * ##########################################################
 */

/* Grid fixes for IE goes here... */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {

    /* All three column advanced grids */
    .en__component--advcolumn:first-child:nth-last-child(3),
    .en__component--advcolumn:first-child:nth-last-child(3) ~ .en__component--advcolumn {

    } 

    /* Explicit position for each grid item */
    .en__component--advcolumn:nth-child(1){
        -ms-grid-row: 1;
        grid-row: 1;       
        background: blue;
        -ms-grid-column: 1;
        -ms-grid-column-span: 1;
        grid-column: 1 / span 1;
    }
    .en__component--advcolumn:nth-child(2){
        -ms-grid-row: 1;
        grid-row: 1;
        background: red;
        -ms-grid-column: 2;
        -ms-grid-column-span: 1;
        grid-column: 2 / span 1;     
    }
    .en__component--advcolumn:nth-child(3){
        -ms-grid-row: 1;
        grid-row: 1;
        background: green;
        -ms-grid-column: 3;
        -ms-grid-column-span: 1;
        grid-column: 3 / span 1;     
    }    
    .en__component--advcolumn:nth-child(4){
        -ms-grid-row: 1;
        grid-row: 1;
        background: purple;
        -ms-grid-column: 4;
        -ms-grid-column-span: 1;
        grid-column: 4 / span 1;     
    }   
    .en__component--advcolumn:nth-child(5){
        -ms-grid-row: 1;
        grid-row: 1;
        background: orange;
        -ms-grid-column: 5;
        -ms-grid-column-span: 1;
        grid-column: 5 / span 1;     
    }           
}

/*
 * ##########################################################
 * # LAYOUT 1
 * # Row 1: Header
 * # Row 2: Sidebar | Banner
 * # Row 3: Sidebar | Content
 * # Row 4: Footer
 * ##########################################################
 */

/* Remove un-needed spacer margin in the page builder */
#en__pagebuilder.layout-1  .en__container{
    margin-top: 0px;
    margin-bottom: 0px;
}

/* Set Content Alignment */
.layout-1 #main-content {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
}

/* Set gap between rows and columns */
.layout-1 .en__component--row{
	grid-gap: 1rem !important;
}

/* Match grid-gap with pseudo column gap on two column components */
.en__component--row--2 .en__component--column--1{
    margin-right: .5rem;
}

/* Match grid-gap with pseudo column gap on two column components */
.en__component--row--2 .en__component--column--2{
    margin-left: .5rem;
}

/* Match grid-gap on rows as long as the row is not the last of its siblings */
.layout-1 .en__component--row:not(:last-child){
	padding-bottom: 1rem;
}

/* Set padding within sections */
.layout-1 .en__component--column {
	padding: .25rem 1rem;
}

/* Desktop Max Width and Margins */
.layout-1 #main-content-inner {
    width: 100%;
    max-width: 62rem;
    margin-top: 2rem;
    margin-bottom: 2rem;
    border: 4px solid black;
    border: .25rem solid black;  
}

/* Useful when starting a template from scratch in page builder */
#en__pagebuilder.layout-1 #main-content-inner{
    min-width: 300px;
    outline: dashed 1px #999;
}

/* Default Desktop Layout */
.layout-1 .header {
    grid-area: header;
    -ms-grid-row: 1;
    grid-row: 1;
    -ms-grid-column: 1;
    -ms-grid-column-span: 3;
    grid-column: 1 / span 3;
}

.layout-1 .banner {
    grid-area: banner;
    -ms-grid-row: 2;
    grid-row: 2;
    -ms-grid-column: 2;
    -ms-grid-column-span: 2;
    grid-column: 2 / span 2;
}

.layout-1 .sidebar {
    grid-area: sidebar;
    -ms-grid-row: 2;
    -ms-grid-row-span: 2;
    grid-row: 2 / span 2;
    -ms-grid-column: 1;
    -ms-grid-column-span: 1;
    grid-column: 1 / span 1;
}

.layout-1 .content {
    grid-area: content;
    -ms-grid-row: 3;
    grid-row: 3;
    -ms-grid-column: 2;
    -ms-grid-column-span: 2;
    grid-column: 2 / span 2;
}

.layout-1 .footer {
    grid-area: footer;
    -ms-grid-row: 4;
    grid-row: 4;
    -ms-grid-column: 1;
    -ms-grid-column-span: 3;
    grid-column: 1 / span 3;
}

/* Move the sidebar from the left to the right by adding "sidebar-right" class to body */
.layout-1.sidebar-right .banner {
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1 / span 2;
}

.layout-1.sidebar-right .content {
    -ms-grid-column: 1;
    -ms-grid-column-span: 2;
    grid-column: 1 / span 2;
}

.layout-1.sidebar-right .sidebar {
    -ms-grid-column: 3;
    -ms-grid-column-span: 1;
    grid-column: 3 / span 1;
}

/* Remove margin and border when screen resolution shrinks towards a mobile breakpoint */
/* Calculated as maximum width of content area + border width + sum of desired minimal margin on both sides */
@media only screen and (max-width: 1074px) {
    .layout-1 #main-content-inner {
        border: none;
        margin-top: 0rem;
        margin-bottom: 0rem;
        max-width: 100%;
    }
}

/* Mobile breakpoint */
@media only screen and (max-width: 46.5rem) {

    /* Remove margins and border on mobile */
    .layout-1 #main-content-inner {
        margin-top: 0rem;
        margin-bottom: 0rem;
        border: none;
        max-width: 100%;
    }
    
    /* Default Mobile Layout */
    .layout-1 .header {
        -ms-grid-row: 1;
        grid-row: 1;
        -ms-grid-column: 1;
        -ms-grid-column-span: 3;
        grid-column: 1 / span 3;
    }

    .layout-1 .banner {
        -ms-grid-row: 2;
        grid-row: 2;
        -ms-grid-column: 1;
        -ms-grid-column-span: 3;
        grid-column: 1 / span 3;
    }

    .layout-1 .sidebar {
        -ms-grid-row: 3;
        grid-row: 3;
        -ms-grid-column: 1;
        -ms-grid-column-span: 3;
        grid-column: 1 / span 3;
    }

    .layout-1 .content {
        -ms-grid-row: 4;
        grid-row: 4;
        -ms-grid-column: 1;
        -ms-grid-column-span: 3;
        grid-column: 1 / span 3;
    }

    .layout-1 .footer {
        -ms-grid-row: 5;
        grid-row: 5;
        -ms-grid-column: 1;
        -ms-grid-column-span: 3;
        grid-column: 1 / span 3;
    }
    
}

/*
 * ##########################################################
 * # DEBUGGING: SECTION COLORS
 * ##########################################################
 */

body.demo #debug-template{
    position: fixed;
    top: 0;
    left: 0;
    margin: 1rem;
    padding: .25rem;
    z-index: 9999;
    opacity: .75;   
    display: block !important;
}

 body.debug .en__component--row{
    background: lightblue;
}

body.debug .en__component--row--1 .en__component--column {
	background: blue;
}

body.debug .en__component--row--2 .en__component--column {
	background: orange;
}

body.debug .en__component--advcolumn {
	background: rebeccapurple;
}

body.debug .header {
	background-color: yellow;
}

body.debug .banner {
	background-color: red;
}

body.debug .sidebar {
	background-color: grey;
}

body.debug .content {
	background-color: green;
}

body.debug .footer {
	background-color: pink;
}

/*
 * ##########################################################
 * # VISUALIZE: LAYOUT
 * ##########################################################
 */

body.demo #visualize-layout{
    position: fixed;
    top: 0;
    right: 0;
    margin: 1rem;
    padding: .25rem;
    z-index: 9999;
    opacity: .75;    
    display: block !important;
}

html,
body,
body.visualize-layout #main-content-wrapper,
body.visualize-layout #main-content,
body.visualize-layout #main-content-inner,
body.visualize-layout .en__component--row{
    background: #ffffff !important;
}

body.visualize-layout .en__component--column{
    background: #e3e3e3 !important;
}

body.visualize-layout .en__component--column > *{
    visibility: hidden !important;
}

body.visualize-layout div{
    border-color: #adaaaa !important;
}

/************************************
 * Inputs
 ***********************************/

 /* General */
 #main-content input[type="date"],
 #main-content input[type="datetime"],
 #main-content input[type="datetime-local"],
 #main-content input[type="email"],
 #main-content input[type="month"],
 #main-content input[type="number"],
 #main-content input[type="password"],
 #main-content input[type="range"],
 #main-content input[type="search"],
 #main-content input[type="tel"],
 #main-content input[type="text"],
 #main-content input[type="time"],
 #main-content input[type="url"],
 #main-content input[type="week"],
 #main-content input[type="hidden"],
 #main-content select,
 #main-content textarea {
   max-width: 100%;
   width: 100%;
   min-width: initial;
   display: block;
   -webkit-box-sizing: border-box;
           box-sizing: border-box;
   height: 2.4375rem;
   margin: 0rem;
   padding: 0.5rem;
   border: 1px solid #cacaca;
   border-radius: 0.3rem;
   background-color: #fefefe;
   -webkit-box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
           box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
   font-family: inherit;
   font-size: 1rem;
   font-weight: normal;
   line-height: 1.5;
   color: #0a0a0a;
   -webkit-transition: border-color 0.25s ease-in-out, -webkit-box-shadow 0.5s;
   transition: border-color 0.25s ease-in-out, -webkit-box-shadow 0.5s;
   transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
   transition: box-shadow 0.5s, border-color 0.25s ease-in-out, -webkit-box-shadow 0.5s;
   -webkit-appearance: none;
   -moz-appearance: none;
   appearance: none;
 }
 
 #main-content select {
   background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='24' viewBox='0 0 32 24'><polygon points='0,0 32,0 16,24' style='fill: rgb%28138, 138, 138%29'></polygon></svg>");
   background-origin: content-box;
   background-position: right center;
   background-position: right -1rem center;
   background-repeat: no-repeat;
   background-size: 0.5625rem 0.375rem;
   padding-right: 1.5rem;
   -webkit-transition: border-color 0.25s ease-in-out, -webkit-box-shadow 0.5s;
   transition: border-color 0.25s ease-in-out, -webkit-box-shadow 0.5s;
   transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
   transition: box-shadow 0.5s, border-color 0.25s ease-in-out, -webkit-box-shadow 0.5s;
 }
 
 #main-content textarea {
   height: 7rem;
   resize: vertical;
 }
 
 /* Focus state */
 #main-content input[type="date"]:focus,
 #main-content input[type="datetime"]:focus,
 #main-content input[type="datetime-local"]:focus,
 #main-content input[type="email"]:focus,
 #main-content input[type="month"]:focus,
 #main-content input[type="number"]:focus,
 #main-content input[type="password"]:focus,
 #main-content input[type="range"]:focus,
 #main-content input[type="search"]:focus,
 #main-content input[type="tel"]:focus,
 #main-content input[type="text"]:focus,
 #main-content input[type="time"]:focus,
 #main-content input[type="url"]:focus,
 #main-content input[type="week"]:focus,
 #main-content select:focus,
 #main-content textarea:focus {
   outline: none;
   border: 1px solid #8a8a8a;
   background-color: #fefefe;
   -webkit-box-shadow: 0 0 0.3125rem #cacaca;
   box-shadow: 0 0 0.3125rem #cacaca;
   -webkit-transition: border-color 0.25s ease-in-out, -webkit-box-shadow 0.5s;
   transition: border-color 0.25s ease-in-out, -webkit-box-shadow 0.5s;
   transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
   transition: box-shadow 0.5s, border-color 0.25s ease-in-out, -webkit-box-shadow 0.5s;
 }
 
 /**
  * Form Block Component: Select Fields
  * Overrides EN Default Styling to ensure mobile friendly widths
  */
 #main-content .en__field__input--select{
   min-width: initial !important;
 }
 
 /* Placeholder styling */
 /* Chrome, Firefox, Opera, Safari 10.1+ */
 ::placeholder { 
     color: #a1a1a1;
     opacity: 1; /* Firefox */
 }
 
 /* Internet Explorer 10-11 */
 :-ms-input-placeholder { 
     color: #a1a1a1;
 }
 
 /* Microsoft Edge */
 ::-ms-input-placeholder { 
     color: #a1a1a1;
 }
 
 /* Custom Styling for Radio & Checkbox Inputs */
 #main-content .en__field__input--radio,
 #main-content .en__field__input--checkbox {
   border: 0;
   clip: rect(0 0 0 0);
   -webkit-clip-path: inset(50%);
   clip-path: inset(50%);
   height: 1px;
   margin: -1px;
   overflow: hidden;
   padding: 0;
   position: absolute;
   width: 1px;
   white-space: nowrap;
 }
 
 #main-content .en__field__input--radio+.en__field__label,
 #main-content .en__field__input--checkbox+.en__field__label {
   position: relative;
   margin-left: 2rem;
   cursor: pointer;
 }
 
 #main-content .en__field__input--radio+.en__field__label::before,
 #main-content .en__field__input--checkbox+.en__field__label::before {
   content: "";
   position: absolute;
   height: calc(1.4rem - 2px);
   width: calc(1.4rem - 2px);
   left: -2rem;
   display: inline-block;
   vertical-align: middle;
   border: 1px solid #c3c3c3;
   -webkit-box-shadow: inset 0 0 0 5px #fff;
           box-shadow: inset 0 0 0 5px #fff;
   cursor: pointer;
   -webkit-transition-duration: .25s;
           transition-duration: .25s;
   -webkit-transition-property: border-color, background-color;
   transition-property: border-color, background-color;
 }
 
 #main-content .en__field__input--radio+.en__field__label::before {
   border-radius: 50%;
 }
 
 #main-content .en__field__input--checkbox+.en__field__label::before {
   border-radius: .2rem;
   -webkit-box-shadow: none;
           box-shadow: none;
 }
 
 #main-content .en__field__input--radio:checked+.en__field__label::before,
 #main-content .en__field__input--checkbox:checked+.en__field__label::before {
   border-color: #2ba6cb;
   background-color: #2ba6cb;
 }
 
 /* CSS code for checkmark symbol */
 /* REF: https://www.toptal.com/designers/htmlarrows/symbols/check-mark/ */
 #main-content .en__field__input--checkbox:checked+.en__field__label::before {
   content: "\a0\2713";
   border-color: #2ba6cb;
   background-color: #2ba6cb;
   color: #ffffff;
 }
 
 /* QA Needed: Would like to find a way so that radio input focus is round rather than square. May require re-writing how radio inputs are styled */
 #main-content .en__field__input--radio:focus + .en__field__label::before,
 #main-content .en__field__input--checkbox:focus + .en__field__label::before {
   outline: #8a8a8a auto 0.3125rem;
 }
 
 /* Buttons */
 #main-content button {
   display: block;
   margin: 0 0 1rem 0;
   font-family: inherit;
   padding: 0.85rem 1rem;
   -webkit-appearance: none;
   border: 1px solid transparent;
   border-radius: 0.3rem;
   -webkit-transition: background-color 0.25s ease-out, color 0.25s ease-out;
   transition: background-color 0.25s ease-out, color 0.25s ease-out;
   font-size: 1rem;
   text-align: center;
   cursor: pointer;
   background-color: #2ba6cb;
   color: #fefefe;
 }
 
 /*
 #main-content .en__submit{
   flex-basis: 100%;
 }*/
 
 #main-content .en__submit button{
   margin-top: 2rem;
 }
 
 #main-content .next-step .en__submit button{
   width: initial;
   margin-left: auto;
 }
 
 #main-content button:hover,
 #main-content button:focus {
   background-color: #258dad;
 }
 
 #main-content button[disabled],
 #main-content button[disabled]:hover,
 #main-content button[disabled]:focus {
   background-color: #1779ba;
   color: #fefefe;
 }
 
 #main-content button[disabled] {
   opacity: 0.25;
   cursor: not-allowed;
 }
 
 /* QA Needed: EN's hidden input field */
 .en__field--hidden{
   display: block;
   width: 100% !important;
 }      
         
         
 /************************************
  * Error Messages
  ***********************************/
 
 #main-content .en__field__error-wrapper .en__field__item{
   margin-bottom: 0.25rem;
 }
 
 /* Page Level Errors */
 .en__errorHeader {
   margin-left: -1.875rem;
   margin-right: -1.875rem;
   padding: 0.5rem 2rem;
   color: #e74b3c;
   font-weight: 700;
   text-align: center;
   background-color: #f4ddda;
 }
 
 .en__errorList > .en__error {
   margin-left: -1.875rem;
   margin-right: -1.875rem;
   padding: 0.5rem 2rem;
   list-style: none;
   color: #e74b3c;
   text-align: center;
   background-color: #f4ddda;
 }
 
 /* Field Level Inline Errors */
 #main-content .en__component .en__field__error {
   padding: 0.25rem 0.5rem;
   color: #ffffff;
   font-size: 0.75rem;
   border-radius: 0.3rem;
   background-color: #e74b3c;
 
 }
 
 /* When EN's field validator flags an error it jumps the user to the first error on thepage. Our cu stom error JS executes after EN's and sets a body level class that we can reorder the field presentation on. If we don't wait to re-order the fields, the page will jump to the error which appears below the input resulting in the user having to scroll up to make the change. This is something that should be fixed on EN's end and how they handle errors, but until then we need this work around */
 /* Code dependent on "oc-en-error-helpers.js" which must execute after EN's "pagedata.js" */
 body.error-jump-assist #main-content .en__component .en__field__error{
   order: 1;
 }
 
 #main-content .en__component .en__field__error-wrapper .en__field__error,
 #main-content .en__component .en__field__error-wrapper input,
 #main-content .en__component .en__field__error-wrapper select,
 #main-content .en__component .en__field__error-wrapper textarea{
   border-radius: 0.3rem;
   border: 1px solid #e74b3c;
 
 }
 
 /* QA Needed: Look into way to do this without :not(radio-to-buttons) so that all Radio to Buttons related code can be in the corresponding Utility section */
 #main-content .en__component:not(.radio-to-buttons) .en__field__error-wrapper .en__field__error{
   border-radius: 0 0 0.3rem 0.3rem; 
   border-top: 0px;
 }
 
 #main-content .en__component .en__field__error-wrapper input:not(.en__field__input--other),
 #main-content .en__component .en__field__error-wrapper select,
 #main-content .en__component .en__field__error-wrapper textarea{
   border-radius: 0.3rem 0.3rem 0 0;
   /*border-bottom: 0px;*/
 }
 
 #main-content .en__component .en__field__error-wrapper.en__field--splittext input,
 #main-content .en__component .en__field__error-wrapper.en__field--tripletext input,
 #main-content .en__component .en__field__error-wrapper.en__field--splitselect select,
 #main-content .en__component .en__field__error-wrapper.en__field--tripleselect input,
 #main-content .en__component .en__field__error-wrapper.en__field--splittext .en__field__error,
 #main-content .en__component .en__field__error-wrapper.en__field--tripletext .en__field__error,
 #main-content .en__component .en__field__error-wrapper.en__field--splitselect .en__field__error,
 #main-content .en__component .en__field__error-wrapper.en__field--tripleselect .en__field__error,
 #main-content .en__component .en__field__error-wrapper.en__field--radio.en__field--withOther .en__field__error{
   border-radius: 0.3rem;
   border: 1px solid #e74b3c;
 }
 
 
 /* Adjust bottom margin on error to make display uniform */
 #main-content .en__component .en__field__error-wrapper.en__field--radio .en__field__item:last-of-type,
 #main-content .en__component .en__field__error-wrapper.en__field--checkbox .en__field__item:last-of-type,
 #main-content .en__component .en__field__error-wrapper.en__field--splittext .en__field__item:last-of-type,
 #main-content .en__component .en__field__error-wrapper.en__field--tripletext .en__field__item:last-of-type,
 #main-content .en__component .en__field__error-wrapper.en__field--splitselect .en__field__item:last-of-type,
 #main-content .en__component .en__field__error-wrapper.en__field--tripleselect .en__field__item:last-of-type{
   margin-bottom: .25rem;
 }
 
 #main-content .en__component .en__field__error-wrapper.en__field--radio,
 #main-content .en__component .en__field__error-wrapper.en__field--checkbox,
 #main-content .en__component .en__field__error-wrapper.en__field--splittext,
 #main-content .en__component .en__field__error-wrapper.en__field--tripletext,
 #main-content .en__component .en__field__error-wrapper.en__field--splitselect,
 #main-content .en__component .en__field__error-wrapper.en__field--tripleselect{
   margin-bottom: 1rem;
 }       
 
 
 /************************************
  * General overrides of EN styles
  ***********************************/
 
 /* QA Needed: In the event Theme CSS causes a hidden field to become displayed, forrce its display to remain hidden */ 
 /* This was an issue originally reported by EN staff, not sure if it still persists with recent styling updates */
 #main-content .en__hidden{
   display: none !important;
 }
 
 #main-content .en__field,
 #main-content .en__captcha{
   padding-bottom: 0;
   margin-bottom: 1rem;
 }
 
 /* For the custom fields we can properly space them, but for EN canned fields we have to fake the funk since we don't know when row-wraps will happen in Flexbox. */
 #main-content .en__component--formblock{
     /*
   display: flex;
   flex-direction: row;*/
 }
 
 /* For inputs with multiple components, apply the bottom margin to the field items so that if they wrap they maintain vertical spacing between them */
 #main-content .en__component .en__field.en__field--radio,
 #main-content .en__component .en__field.en__field--checkbox,
 #main-content .en__component .en__field.en__field--splittext,
 #main-content .en__component .en__field.en__field--tripletext,
 #main-content .en__component .en__field.en__field--splitselect,
 #main-content .en__component .en__field.en__field--tripleselect{
   margin-bottom: 0;
 }
 
 /* Make the spacing between wrapping elements tighter so the user knows they're related */
 #main-content .en__component .en__field.en__field--radio .en__field__item,
 #main-content .en__component .en__field.en__field--checkbox .en__field__item,
 #main-content .en__component .en__field.en__field--splittext .en__field__item,
 #main-content .en__component .en__field.en__field--tripletext .en__field__item,
 #main-content .en__component .en__field.en__field--splitselect .en__field__item,
 #main-content .en__component .en__field.en__field--tripleselect .en__field__item{
   margin-bottom: .25rem;
 }
 
 /* Pick up the normal spacing on the last element so form pacing continues as expected */
 /*
 #main-content .en__component .en__field.en__field--radio .en__field__item:last-of-type,
 #main-content .en__component .en__field.en__field--checkbox .en__field__item:last-of-type,
 #main-content .en__component .en__field.en__field--splittext .en__field__item:last-of-type,
 #main-content .en__component .en__field.en__field--tripletext .en__field__item:last-of-type,
 #main-content .en__component .en__field.en__field--splitselect .en__field__item:last-of-type,
 #main-content .en__component .en__field.en__field--tripleselect .en__field__item:last-of-type{
   margin-bottom: 1rem;
 }*/
 
 
 /* QA Needed: Does not actually do what it's supposed to when all elelements are on same row. */
 #main-content .en__component .en__field.en__field--radio .en__field__item--other,
 #main-content .en__component .en__field.en__field--checkbox .en__field__item--other{
     margin-top: .25rem;
     margin-bottom: 1.25rem;
 }
 
 #main-content .en__field__element{
   width: 100%;
   display: flex;
 }
 
 #main-content .en__component .en__field,
 #main-content .en__component .en__field--splitselect,
 #main-content .en__component .en__field--tripletext,
 #main-content .en__component .en__field--splitselect,
 #main-content .en__component .en__field--tripleselect {
   flex-basis: 100%;
   display: flex;
   flex-direction: column;
 }
 
 /*
 #main-content .en__component--formblock .en__field,
 #main-content .en__component--formblock .en__field div.en__field__item{
   margin-left: .5rem;
   margin-right: .5rem;
 }*/
 
 /* Needs QA: ENs page builder adds a div to the formblock DOM on hover. This will cause a small right margin to appear as the expected input fields are no longer the last of their siblings */
 body #main-content .en__component--formblock .en__field:last-of-type,
 body #main-content .en__component--formblock .en__field div.en__field__item:last-of-type{
   margin-right: 0rem;
 }
 
 /* Needs QA: ENs page builder adds a div to the formblock DOM on hover. This will cause a small right margin to appear as the expected input fields are no longer the last of their siblings */
 body#en__pagebuilder #main-content .en__component--formblock:hover .en__field:nth-last-of-type(2),
 body#en__pagebuilder #main-content .en__component--formblock:hover .en__field div.en__field__item:nth-last-of-type(2){
   margin-right: 0rem;
 }
 
 #main-content .en__component--formblock .en__field:first-of-type,
 #main-content .en__component--formblock .en__field div.en__field__item:first-of-type{
   margin-left: 0rem;
 }
 
 #main-content .en__component--formblock.items-might-wrap .en__field:last-of-type,
 #main-content .en__component--formblock.items-might-wrap .en__field div.en__field__item:last-of-type,
 #main-content .en__component--formblock.items-might-wrap .en__field:first-of-type,
 #main-content .en__component--formblock.items-might-wrap .en__field div.en__field__item:first-of-type{
   margin-left: .5rem;
   margin-right: .5rem;
 }
 
 #main-content .en__component--formblock .en__field:only-child,
 #main-content .en__component--formblock .en__field div.en__field__item:only-child{
   margin-left: 0;
   margin-right: 0;
 }
 
 #main-content .en__component--formblock .row-wrap .en__field,
 #main-content .en__component--formblock .row-wrap .en__field div.en__field__item{
   margin-left: .5rem;
   margin-right: .5rem;
 }
 
 #main-content .en__field__item {
   padding: 0;
 
 }
 
 #main-content .en__field__element--splittext .en__field__item,
 #main-content .en__field__element--splitselect .en__field__item{
   width: 50%;
 }
 #main-content .en__field__element--tripletext .en__field__item,
 #main-content .en__field__element--tripleselect .en__field__item{
   width: 33.333333%;
 }
 
 
 
 /* EN sets field labels to a fixed width of 180px, this makes them responsive */
 #main-content .en__field__label {
   padding-top: .25em;
   padding-bottom: .25em;
   width: auto;
 }
 
 /* Needs QA: Makes images responsive. Look into not using !important. */
 #main-content img {
   max-width: 100%;
   height: auto !important;
   margin: 0 auto;
   display: inherit;
 }
 
 /* Remove fixed min-width on Thermometer bar */
 #main-content .enWidget__bar .enWidget__progress{
   min-width: initial;
 }
 
 /* Make sure that background colors are not hard coded */
 #main-content .en__twitterTarget,
 #main-content .en__tweetBackgroundText,
 #main-content .en__tweet,
 #main-content .en__tweetDisabled,
 #main-content .en__tweetButton,
 #main-content .en__tweetContact{
   background-color: initial;
 }
 
 /* When embedded, remove unnecessary padding */
 body.embedded #main-content .en__tweetButton{
   padding-right: 0px;
 }
 
 /* If in page builder, give the background some color so that input fields stand out */
 body#en__pagebuilder{
   background-color: #f1f1f1;
 }
 
 /* EN sets background to white making it not ideal for non-white backgrounds. This resets it to an initial state "transparent". */
 #main-content .en__contact__toggle,
 #main-content .en__contact--open .en__contact__toggle {
     background-color: initial;
 }
 
 /* Reduces min-height of the page builder */
 #en__pagebuilder .en__component--page.ui-sortable{
   min-height: 0px;
 }
 